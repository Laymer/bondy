{
    "host" : "_",
    "realm_uri" : "com.leapsight.bondy",
    "variables" : {
        "oauth2" : {
            "type" : "oauth2",
            "flow" : "resource_owner_password_credentials",
            "token_path" : "/oauth/token",
            "revoke_token_path" : "/oauth/revoke",
            "schemes" : "{{variables.schemes}}"
        },
        "query_spec" :
            "{{request.query_params |> with([_q,_p,_limit,_sort,_page])}}",
        "query_match" :
            "{{request.query_params |> without([_q,_p,_limit,_sort,_page])}}",
        "schemes" : ["http"],
        "error_codes" : {
            "com.leapsight.bondy.error.not_found" : 404,
            "com.leapsight.bondy.error.role_exists": 400,
            "com.leapsight.bondy.error.unknown_user": 400,
            "wamp.error.authorization_failed" : 403,
            "wamp.error.cancelledâ€‹" : 500,
            "wamp.error.close_realm" : 500,
            "wamp.error.disclose_me.not_allowed" : 500,
            "wamp.error.goodbye_and_out" : 500,
            "wamp.error.invalid_argument" : 400,
            "wamp.error.invalid_uri" : 502,
            "wamp.error.network_failure" : 502,
            "wamp.error.no_eligible_callee" : 502,
            "wamp.error.no_such_procedure" : 501,
            "wamp.error.no_such_realm" : 502,
            "wamp.error.no_such_registration" : 502,
            "wamp.error.no_such_role" : 500,
            "wamp.error.no_such_session" : 500,
            "wamp.error.no_such_subscription" : 500,
            "wamp.error.not_authorized" : 401,
            "wamp.error.option_disallowed.disclose_me" : 400,
            "wamp.error.option_not_allowed" : 400,
            "wamp.error.procedure_already_exists" : 400,
            "wamp.error.system_shutdown" : 500
        },
        "cors_headers": {
            "access-control-allow-origin": "*",
            "access-control-allow-credentials": "true",
            "access-control-allow-methods": "GET,HEAD,PUT,PATCH,POST,DELETE",
            "access-control-allow-headers": "origin,x-requested-with,content-type,accept",
            "access-control-max-age": "86400"
        },
        "wamp_error_body": "{{action.error.arguments_kw |> put(code, {{action.error.error_uri}}) |> put(status_code, {{action.error.status_code}})}}"
    },
    "defaults" : {
        "retries" : 0,
        "timeout" : 5000,
        "connect_timeout" : 5000,
        "schemes" : "{{variables.schemes}}",
        "headers": "{{variables.cors_headers}}",
        "security":{}
    },
    "versions" :  {
        "1.0.0" : {
            "base_path" : "/[v1.0]",
            "variables" : {},
            "defaults" : {
                "timeout" : 20000
            },
            "paths" : {
                "/services/load_api_spec" : {
                    "post" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "com.leapsight.bondy.api_gateway.load",
                            "options" : {},
                            "arguments" : [
                                "{{request.body}}"
                            ],
                            "arguments_kw" : {
                                // "security" : "{{security}}"
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{variables.wamp_error_body.status_code}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms": {
                    "is_collection" : true,
                    "get": {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "com.leapsight.bondy.security.list_realms",
                            "options" : {},
                            "arguments" : [],
                            "arguments_kw" : {}
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{variables.error_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "post" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "com.leapsight.bondy.security.create_realm",
                            "options" : {},
                            "arguments" : ["{{request.body}}"],
                            "arguments_kw" : {}
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{variables.error_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "uri": "\"{{request.path}}/{{action.result.arguments |> head |> get('uri')}}\"",
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/security_enabled" : {
                    "is_collection" : false,
                    "get": {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "com.leapsight.bondy.security.is_enabled",
                            "options" : {},
                            "arguments" : ["{{request.bindings.realm_uri}}"],
                            "arguments_kw" : {}
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{variables.error_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "put" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "com.leapsight.bondy.security.enable",
                            "options" : {},
                            "arguments" : ["{{request.bindings.realm_uri}}"],
                            "arguments_kw" : {
                                // "security" : "{{security}}"
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{variables.error_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "delete" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "com.leapsight.bondy.security.disable",
                            "options" : {},
                            "arguments" : ["{{request.bindings.realm_uri}}"],
                            "arguments_kw" : {
                                // "security" : "{{security}}"
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{variables.error_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/clients" : {
                    "is_collection" : true,
                    "post" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "com.leapsight.bondy.api_gateway.add_client",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.body}}"
                            ],
                            "arguments_kw" : {
                                // "security" : "{{security}}"
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{variables.error_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/clients/:id" : {
                    "is_collection" : false,
                    "put" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "com.leapsight.bondy.api_gateway.update_client",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.id}}",
                                "{{request.body}}"
                            ]
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{variables.error_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "delete" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "com.leapsight.bondy.api_gateway.remove_client",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.id}}"
                            ]
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{variables.error_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/resource_owners" : {
                    "is_collection" : true,
                    "post" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "com.leapsight.bondy.api_gateway.add_resource_owner",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.body}}"
                            ],
                            "arguments_kw" : {
                                // "security" : "{{security}}"
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{variables.error_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/resource_owners/:id" : {
                    "is_collection" : false,
                    "put" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "com.leapsight.bondy.api_gateway.update_resource_owner",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.id}}",
                                "{{request.body}}"
                            ]
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{variables.error_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "delete" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "com.leapsight.bondy.api_gateway.remove_resource_owner",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.id}}"
                            ]
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{variables.error_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/users" : {
                    "is_collection" : true,
                    "post" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "com.leapsight.bondy.security.add_user",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.body}}"
                            ],
                            "arguments_kw" : {
                                // "security" : "{{security}}"
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{variables.error_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "get" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "com.leapsight.bondy.security.list_users",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}"
                            ],
                            "arguments_kw" : {
                                // "security" : "{{security}}"
                            }
                        },
                        "response" : {
                           "on_error" : {
                               "status_code" : "{{variables.error_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" : "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/users/:id" : {
                    "is_collection" : false,
                    "get" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "com.leapsight.bondy.security.find_user",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.id}}"
                            ]
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{variables.error_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "put" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "com.leapsight.bondy.security.update_user",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.id}}",
                                "{{request.body}}"
                            ]
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{variables.error_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "delete" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "com.leapsight.bondy.security.delete_user",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.id}}"
                            ]
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{variables.error_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/groups" : {
                    "is_collection" : true,
                    "post" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "com.leapsight.bondy.security.add_group",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.body}}"
                            ],
                            "arguments_kw" : {
                                // "security" : "{{security}}"
                            }
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{variables.error_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "get" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "com.leapsight.bondy.security.list_groups",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}"
                            ],
                            "arguments_kw" : {
                                // "security" : "{{security}}"
                            }
                        },
                        "response" : {
                           "on_error" : {
                               "status_code" : "{{variables.error_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" : "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                },
                "/realms/:realm_uri/groups/:id" : {
                    "is_collection" : false,
                    "get" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "com.leapsight.bondy.security.find_group",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.id}}"
                            ]
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{variables.error_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "put" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "com.leapsight.bondy.security.update_group",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.id}}",
                                "{{request.body}}"
                            ]
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{variables.error_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    },
                    "delete" : {
                        "action" : {
                            "type" : "wamp_call",
                            "procedure" : "com.leapsight.bondy.security.delete_group",
                            "options" : {},
                            "arguments" : [
                                "{{request.bindings.realm_uri}}",
                                "{{request.bindings.id}}"
                            ]
                        },
                        "response" : {
                           "on_error" : {
                                "status_code" : "{{variables.error_codes |> get({{action.error.error_uri}}, 500) |> integer}}",
                                "body" : "{{variables.wamp_error_body}}"
                            },
                            "on_result" : {
                                "body" :
                                    "{{action.result.arguments |> head}}"
                            }
                        }
                    }
                }
            }
        }
    }
}