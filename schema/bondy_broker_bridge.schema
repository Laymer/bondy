%% =============================================================================
%%  bondy_broker_bridge.schema - Bondy configuration schema for Cuttlefish
%%
%%  Copyright (c) 2016-2019 Ngineo Limited t/a Leapsight. All rights reserved.
%%
%%  Licensed under the Apache License, Version 2.0 (the "License");
%%  you may not use this file except in compliance with the License.
%%  You may obtain a copy of the License at
%%
%%     http://www.apache.org/licenses/LICENSE-2.0
%%
%%  Unless required by applicable law or agreed to in writing, software
%%  distributed under the License is distributed on an "AS IS" BASIS,
%%  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%%  See the License for the specific language governing permissions and
%%  limitations under the License.
%% =============================================================================



%% -----------------------------------------------------------------------------
%% @doc
%% @end
%% -----------------------------------------------------------------------------
{mapping, "kafka_bridge.enabled", "bondy_broker_bridge.bridges.bondy_kafka_bridge.enabled", [
  {datatype, flag},
  {default, off}
]}.



%% =============================================================================
%% BONDY BROKER BRIDGE CONFIGURATION
%% =============================================================================


%% -----------------------------------------------------------------------------
%% @doc The configuration filename for the Broker Bridge.
%% @end
%% -----------------------------------------------------------------------------
{mapping, "broker_bridge.config_file", "bondy_broker_bridge.config_file", [
  {datatype, file},
  {default, "$(platform_etc_dir)/broker_bridge_config.json"}
]}.


%% -----------------------------------------------------------------------------
%% @doc
%% @end
%% -----------------------------------------------------------------------------
{mapping, "broker_bridge.kafka.enabled", "bondy_broker_bridge.bridges.bondy_kafka_bridge.enabled", [
  {datatype, flag},
  {default, off}
]}.

%% -----------------------------------------------------------------------------
%% @doc A mapping of names to kafka topics. This mapping is used by the JSON
%% broker_bridge.config_file which defines the subscribers for each bridge.
%%
%% Example:
%%
%% broker_bridge.kafka.topics.important_events = "com.myapp.events.important"
%%
%% In the config_file you can use the mops expression
%% `"{{kafka.topics |> get(important_events)}}"` to get the value
%% "com.myapp.events.important" for the name "important_events".
%% -----------------------------------------------------------------------------
{mapping, "broker_bridge.kafka.topics.$name", "bondy_broker_bridge.bridges.bondy_kafka_bridge.topics", [
  {datatype, string},
  {default, "com.bondy.example"},
  {include_default, "example"}
]}.

{translation,
"bondy_broker_bridge.bridges.bondy_kafka_bridge.topics",
fun(Conf0) ->
    Conf = cuttlefish_variable:filter_by_prefix(
      "broker_bridge.kafka.topics", Conf0),
    lists:foldl(
        fun({[_, _, _, Key], Value}, Acc) ->
          [{list_to_binary(Key), list_to_binary(Value)} | Acc]
        end,
        [],
        Conf
    )
end}.



%% -----------------------------------------------------------------------------
%% @doc
%% @end
%% -----------------------------------------------------------------------------
{mapping, "broker_bridge.kafka.clients.$name.endpoints", "bondy_broker_bridge.bridges.bondy_kafka_bridge.clients", [
  {datatype, ip},
  {default, {"127.0.0.1", 9092}},
  {include_default, "default"}
]}.

%% -----------------------------------------------------------------------------
%% @doc
%% @end
%% -----------------------------------------------------------------------------
{mapping, "broker_bridge.kafka.clients.$name.restart_delay_seconds", "bondy_broker_bridge.bridges.bondy_kafka_bridge.clients", [
  {datatype, {duration, s}},
  {default, "10s"},
  {include_default, "default"}
]}.

%% -----------------------------------------------------------------------------
%% @doc
%% @end
%% -----------------------------------------------------------------------------
{mapping, "broker_bridge.kafka.clients.$name.max_metadata_sock_retry", "bondy_broker_bridge.bridges.bondy_kafka_bridge.clients", [
  {datatype, integer},
  {default, 5},
  {include_default, "default"}
]}.

%% -----------------------------------------------------------------------------
%% @doc
%% @end
%% -----------------------------------------------------------------------------
{mapping, "broker_bridge.kafka.clients.$name.reconnect_cool_down_seconds", "bondy_broker_bridge.bridges.bondy_kafka_bridge.clients", [
  {datatype, {duration, s}},
  {default, "10s"},
  {include_default, "default"}
]}.

%% -----------------------------------------------------------------------------
%% @doc
%% @end
%% -----------------------------------------------------------------------------
{mapping, "broker_bridge.kafka.clients.$name.auto_start_producers", "bondy_broker_bridge.bridges.bondy_kafka_bridge.clients", [
  {datatype, flag},
  {default, on},
  {include_default, "default"}
]}.

%% -----------------------------------------------------------------------------
%% @doc
%% @end
%% -----------------------------------------------------------------------------
{mapping, "broker_bridge.kafka.clients.$name.allow_topic_auto_creation", "bondy_broker_bridge.bridges.bondy_kafka_bridge.clients", [
  {datatype, flag},
  {default, off},
  {include_default, "default"}
]}.

%% -----------------------------------------------------------------------------
%% @doc
%% @end
%% -----------------------------------------------------------------------------
{mapping, "broker_bridge.kafka.clients.$name.producer.topic_restart_delay_seconds", "bondy_broker_bridge.bridges.bondy_kafka_bridge.clients", [
  {datatype, {duration, s}},
  {default, "10s"},
  {include_default, "default"}
]}.

%% -----------------------------------------------------------------------------
%% @doc
%% @end
%% -----------------------------------------------------------------------------
{mapping, "broker_bridge.kafka.clients.$name.producer.partition_restart_delay_seconds", "bondy_broker_bridge.bridges.bondy_kafka_bridge.clients", [
  {datatype, {duration, s}},
  {default, "2s"},
  {include_default, "default"}
]}.

%% -----------------------------------------------------------------------------
%% @doc
%% @end
%% -----------------------------------------------------------------------------
{mapping, "broker_bridge.kafka.clients.$name.producer.required_acks", "bondy_broker_bridge.bridges.bondy_kafka_bridge.clients", [
  {datatype, integer},
  {default, 1},
  {include_default, "default"}
]}.

%% -----------------------------------------------------------------------------
%% @doc
%% @end
%% -----------------------------------------------------------------------------
{mapping, "broker_bridge.kafka.clients.$name.socket.sndbuf", "bondy_broker_bridge.bridges.bondy_kafka_bridge.clients", [
  {datatype, bytesize},
  {include_default, "default"}
]}.

%% -----------------------------------------------------------------------------
%% @doc
%% @end
%% -----------------------------------------------------------------------------
{mapping, "broker_bridge.kafka.clients.$name.socket.recbuf", "bondy_broker_bridge.bridges.bondy_kafka_bridge.clients", [
  {datatype, bytesize},
  {include_default, "default"}
]}.



{translation,
"bondy_broker_bridge.bridges.bondy_kafka_bridge.clients",
fun(Conf0) ->
    Conf = cuttlefish_variable:filter_by_prefix(
        "broker_bridge.kafka.clients", Conf0),
    Names = sets:to_list(
        sets:from_list(
            lists:foldl(
                fun(X, Acc) -> [element(4, X) | Acc] end,
                [],
                [list_to_tuple(K) || {K, _} <- Conf]
            )
        )
    ),
    Fun = fun(Name, Acc) ->
        %% Socket Opts
        AllConf = cuttlefish_variable:filter_by_prefix(
            "broker_bridge.kafka.clients." ++ Name, Conf),
        SocketConf = cuttlefish_variable:filter_by_prefix(
            "broker_bridge.kafka.clients." ++ Name ++ ".socket", AllConf),

        Socket = lists:foldl(
            fun
                ({[_, _, _, Name, "socket", "sndbuf"], Val}, SAcc) ->
                    [{sndbuff, Val} | SAcc];
                ({[_, _, _, Name, "socket", "recbuf"], Val}, SAcc) ->
                    [{recbuf, Val} | SAcc]
            end,
            [],
            SocketConf
        ),


        %% Producer Opts
        ProducerConf = cuttlefish_variable:filter_by_prefix(
            "broker_bridge.kafka.clients." ++ Name ++ ".producer", AllConf),

        Producer = lists:foldl(
            fun({[_, _, _, Name, "producer", Key], Val}, PAcc) ->
                case Key of
                    "topic_restart_delay_seconds" ->
                        [{topic_restart_delay_seconds, Val} | PAcc];
                    "partition_restart_delay_seconds" ->
                        [{partition_restart_delay_seconds, Val} | PAcc];
                    "required_acks" ->
                        [{required_acks, Val} | PAcc]
                end
            end,
            [],
            ProducerConf
        ),

        RestConf = sets:to_list(
            sets:subtract(
                sets:from_list(AllConf),
                sets:union(
                    sets:from_list(SocketConf),
                    sets:from_list(ProducerConf)
                )
            )
        ),
        Rest = lists:foldl(
            fun({[_, _, _, Name, Key], Val}, RAcc) ->
                [{list_to_atom(Key), Val} | RAcc]
            end,
            [],
            RestConf
        ),

        Client = {
            list_to_atom(Name),
            [
                {extra_sock_opts, Socket},
                {default_producer_config, Producer}
                | Rest
            ]
        },

        [Client | Acc]
    end,
    lists:foldl(Fun, [], Names)
end}.
